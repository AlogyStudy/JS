
Don't be afraid.

db
	连接数据库

class
	require --mongoose
	reuqire -- db

	Schema	
		为Schema 添加方法
	Model
	
app
	require -- db
	require -- class
	
	实例化 class //实体进行操作
	执行 save

mongoose首先要想明白，所有的操作都不是对数据库进行操作，所有的操作都是对类，实例进行的，但是数据库的持久化自动完成了。	



-------------------------------------------------------
mongoose 进行_id比较
	find({_id: new Object(_id)})


-------------------------------------------------------

提供一个借口，让别人评论通道。
给每一个bolg添加一个对象方法，每个对象评论不一样。


可以嵌套多个Schema.

只要对象做，所有的表都是匹配的。


-------------------------------------------------------

数据同步，
课程表--> 小明
	找到的是小明对象。

	另一个对象的操作，就可以影响自己。

需要同时调用两个函数。


什么时候会使用到外键
		

-------------------------------------------------------

修改数据
是需要先得到，改变东西，然后save



-------------------------------------------------------

学生选择那些课

课程有哪些学生报名



-------------------------------------------------------


建立
modules
views
contorller


路由处理
首页
	db.js  -- require 在 app.js 中
	
添加


Student.js
	StudentSchema & Kechengs  建立外键
	




------------------------------------------------------

【成绩管理系统】
	
班级，学生，成绩
多对1的关系。
学生只能属于一个班级，班级可以有多个学生。
班级，学生的关系，怎么在数据存储呢？

思路1：在学生collection中，用一个属性存储班级.
{'name'：'张三','class'： '1'}

这么做的好处就是简单，没有外键的概念。
缺点，想列出班级中的所有学生的时候，效率不高，班级维护不方便。

学生、成绩的关系弄顺


网页业务：

显示列表
增加学生
修改学生
删除学生


-------------------------------------------------------


json 从前台开始，就不变形

router 不需要做具体插入的业务

model 
	db.js




只要return ;  cb(); 都需要db.close();




玩明白 MVC


